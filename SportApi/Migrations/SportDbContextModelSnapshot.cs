// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportApi;

namespace SportApi.Migrations
{
    [DbContext(typeof(SportDbContext))]
    partial class SportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportApi.BetType", b =>
                {
                    b.Property<int>("BetTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(20);

                    b.Property<decimal>("Draw");

                    b.Property<int>("MarketID");

                    b.Property<decimal>("PriceOne");

                    b.Property<decimal>("PriceTwo");

                    b.HasKey("BetTypeID");

                    b.ToTable("BetType");
                });

            modelBuilder.Entity("SportApi.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("SportID");

                    b.HasKey("CountryID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("SportApi.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("TournamentID");

                    b.HasKey("EventID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("SportApi.Market", b =>
                {
                    b.Property<int>("MarketID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventID");

                    b.Property<string>("MarketName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("MarketID");

                    b.ToTable("Market");
                });

            modelBuilder.Entity("SportApi.Sport", b =>
                {
                    b.Property<int>("SportID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SportName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("SportID");

                    b.ToTable("Sport");
                });

            modelBuilder.Entity("SportApi.Tournament", b =>
                {
                    b.Property<int>("TournamentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryID");

                    b.Property<string>("TournamentName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("TournamentID");

                    b.ToTable("Tournament");
                });

            modelBuilder.Entity("SportApi.UserBet", b =>
                {
                    b.Property<int>("BetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BetTypeID");

                    b.Property<decimal>("PotentialPayout");

                    b.Property<bool>("Result");

                    b.Property<decimal>("Stake");

                    b.Property<int>("UserID");

                    b.HasKey("BetID");

                    b.ToTable("UserBet");
                });

            modelBuilder.Entity("SportApi.UserDetails", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("UserID");

                    b.ToTable("UserDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
